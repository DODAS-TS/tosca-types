tosca_definitions_version: tosca_simple_yaml_1_0
 
description: TOSCA test for the IM

topology_template:
  inputs:
    db_name:
      type: string
      default: cellar
    db_user:
      type: string
      default: dbuser
    db_password:
      type: string
      default: pass
    mysql_root_password:
      type: string
      default: mypass
    download_url:
      type: string
      default: https://s3.amazonaws.com/cursoscloudupv/cloudformation/cellar-webapp-sql.tgz
      
  node_templates:
  
    apache:
      type: tosca.nodes.WebServer.Apache
      requirements:
        - host: web_server
      interfaces:
        Standard:
          configure: 
            implementation: webapps/cellar-mysql.yml
            inputs:
              download_url: { get_input: download_url }
              db_host: { get_attribute: [ db_server, private_address ] }
              db_name: { get_input: db_name }
              db_user: { get_input: db_user }
              db_password: { get_input: db_password }
 
    web_server:
      type: tosca.nodes.indigo.Compute
      properties:
        public_ip: yes
      capabilities:
        # Host container properties
        host:
         properties:
           num_cpus: 1
           mem_size: 1 GB
        # Guest Operating System properties
        os:
          properties:
            # host Operating System image properties
            type: linux 
            distribution: ubuntu 
 
    test_db:
      type: tosca.nodes.indigo.Database.MySQL
      properties:
        name: { get_input: db_name }
        user: { get_input: db_user }
        password: { get_input: db_password }
        root_password: { get_input: mysql_root_password }
      artifacts:
        db_content:
          file: https://raw.githubusercontent.com/ccoenraets/wine-cellar-php/master/cellar.sql
          type: tosca.artifacts.File
      requirements:
        - host:
            node: mysql
      interfaces:
        Standard:
          configure:
            implementation: mysql/mysql_db_import.yml
            inputs:
              db_name: { get_property: [ SELF, name ] }
              db_data: { get_artifact: [ SELF, db_content ] }
              db_name: { get_property: [ SELF, name ] }
              db_user: { get_property: [ SELF, user ] }
 
    mysql:
      type: tosca.nodes.DBMS.MySQL
      properties:
        root_password: { get_input: mysql_root_password }
      requirements:
        - host:
            node: db_server
 
    db_server:
      type: tosca.nodes.Compute
      capabilities:
        # Host container properties
        host:
         properties:
           num_cpus: 1
           disk_size: 10 GB
           mem_size: 4 GB
        os:
         properties:
           architecture: x86_64
           type: linux
           distribution: ubuntu
