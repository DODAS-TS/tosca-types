tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/devel/custom_types.yaml

description: >
  TOSCA test for launching a Galaxy Server also configuring the bowtie2
  tool using Galaxy Tool Shed.

topology_template:
  inputs:
    number_cpus:
      type: integer
      description: number of cpus required for the instance
      default: 1
    memory_size:
      type: string
      description: ram memory required for the instance
      default: 1 GB
    admin_email:
      type: string
      description: email of the admin user
      default: admin@admin.com
    admin_api_key:
      type: string
      description: key to access the API with admin role
      default: not_very_secret_api_key
    user:
      type: string
      description: username to launch the galaxy daemon
      default: galaxy
    version:
      type: string
      description: galaxy version to install
      default: master
    instance_description:
      type: string
      description: galaxy instance description
      default: "INDIGO Galaxy test"
    instance_key_pub:
      type: string
      description: galaxy instance ssh public key
      default: your_ssh_public_key
 
  node_templates:

    galaxy:
      type: tosca.nodes.indigo.GalaxyPortal
      properties:
        admin_email: { get_input: admin_email }
        admin_api_key: { get_input: admin_api_key }
        version: { get_input: version }
        instance_description: { get_input: instance_description }
        instance_key_pub: { get_input: instance_key_pub }
      requirements:
        - lrms: local_lrms

    # type to describe a Galaxy not using any LRMS but using the local system
    local_lrms:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Local
      requirements:
        - host: galaxy_server
 
    galaxy_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
            ports:
              http_port:
                protocol: tcp
                source: 80
        # Host container properties
        host:
         properties:
           num_cpus: { get_input: number_cpus }
           mem_size: { get_input: memory_size }
        # Guest Operating System properties
        os:
          properties:
            type: linux 
            distribution: centos
            version: 7
            image: indigodatacloudapps/galaxy
      requirements:
        # contextually this can only be a relationship type
        - local_storage:
            # capability is provided by Compute Node Type
            node: my_block_storage
            relationship:
              type: AttachesTo
              properties:
                location: /mnt/disk
                device: hdb

    my_block_storage:
      type: BlockStorage
      properties:
        size: 10 GB

  outputs:
    galaxy_url:
      value: { concat: [ 'http://', get_attribute: [ galaxy_server, public_address, 0 ], '/galaxy' ] }
