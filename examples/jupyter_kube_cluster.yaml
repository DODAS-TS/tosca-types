tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml

description: >
  TOSCA test for launching a Kubernetes Virtual Cluster.

topology_template:
  inputs:
    wn_num:
      type: integer
      description: Number of WNs in the cluster
      default: 1
      required: yes
    fe_cpus:
      type: integer
      description: Numer of CPUs for the front-end node
      default: 2
      required: yes
    fe_mem:
      type: scalar-unit.size
      description: Amount of Memory for the front-end node
      default: 2 GB
      required: yes
    wn_cpus:
      type: integer
      description: Numer of CPUs for the WNs
      default: 1
      required: yes
    wn_mem:
      type: scalar-unit.size
      description: Amount of Memory for the WNs
      default: 2 GB
      required: yes

    admin_username:
      type: string
      description: Username of the admin user
      default: kubeuser
    admin_token:
      type: string
      description: Access Token for the admin user
      default: not_very_secret_token

  node_templates:

    jupyterhub:
      type: tosca.nodes.indigo.JupyterHub
      properties:
        spawner: kubernetes
      requirements:
        - host: compute_fe
        - dependency: kube_fe

    kube_fe:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Kubernetes
      properties:
        admin_username:  { get_input: admin_username }
        admin_token: { get_input: admin_token }
      requirements:
        - host: compute_fe

    compute_fe:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            dns_name: kubeserver
            network_name: PUBLIC
            port: 8000
            protocol: tcp
        host:
          properties:
            num_cpus: { get_input: fe_cpus }
            mem_size: { get_input: fe_mem }
        os:
          properties:
            image: linux-ubuntu-16.04-vmi
            #type: linux
            #distribution: ubuntu
            #version: 16.04

    kube_wn:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Kubernetes
      properties:
        front_end_ip: { get_attribute: [ compute_fe, private_address, 0 ] }
      requirements:
        - host: compute_wn
        - dependency: kube_fe

    compute_wn:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count: { get_input: wn_num }
        host:
          properties:
            num_cpus: { get_input: wn_cpus }
            mem_size: { get_input: wn_mem }
        os:
          properties:
            image: linux-ubuntu-16.04-vmi
            #type: linux
            #distribution: ubuntu
            #version: 16.04

  outputs:
    jupyterhub_url:
      value: { concat: [ 'http://', get_attribute: [ compute_fe, public_address, 0 ], ':8000' ] }
    cluster_ip:
      value: { get_attribute: [ compute_fe, public_address, 0 ] }
    cluster_creds:
      value: { get_attribute: [ compute_fe, endpoint, credential, 0 ] }
