---
- hosts: localhost
  connection: local
  handlers:
    - name: restart cluesd
      service: name=cluesd state=restarted

  vars:
      VNODE: vnode-
        
  tasks:
    # /etc/hosts configuration
    - shell: |
        for i in `seq 1 {{ec3_max_instances}}`; do
          item="{{VNODE}}${i}";
          grep -q "\<${item}\>" /etc/hosts || echo "127.0.0.1 ${item}.localdomain ${item}" >> /etc/hosts;
        done
  
    # CLUES2 Config file
    - file: path=/etc/clues2 state=directory mode=755

    - copy: src=/etc/clues2/clues2.cfg-full-example dest=/etc/clues2/clues2.cfg force=no
      notify: restart cluesd

    - ini_file: dest=/etc/clues2/clues2.cfg section={{ item.section }} option={{ item.option }} value="{{ item.value }}"
      with_items:
        - { section: 'general', option: 'POWERMANAGER_CLASS', value: 'cluesplugins.indigo_orchestrator' }
        - { section: 'scheduler_power_off_idle', option: 'IDLE_TIME', value: '300' }
        - { section: 'monitoring', option: 'MAX_WAIT_POWERON', value: '2000' }
        - { section: 'monitoring', option: 'MAX_WAIT_POWEROFF', value: '600' }
        - { section: 'monitoring', option: 'PERIOD_LIFECYCLE', value: '10' }
        - { section: 'general', option: 'CLUES_SECRET_TOKEN', value: '{{clues_secret_token}}' }
        - { section: 'client', option: 'CLUES_SECRET_TOKEN', value: '{{clues_secret_token}}' }
        - { section: 'client', option: 'CLUES_REQUEST_WAIT_TIMEOUT', value: '0' }
      notify: restart cluesd
      
      # CLUES IM configuration
    - file: path=/usr/local/ec3 state=directory mode=755
    
      # CLUES INDIGO Orchestrator plugin configuration
    - ini_file: dest=/etc/clues2/conf.d/plugin-ec3.cfg section="INDIGO ORCHESTRATOR" option=INDIGO_ORCHESTRATOR_DEPLOY_ID value={{ec3_deployment_id}}
      notify: restart cluesd
    - ini_file: dest=/etc/clues2/conf.d/plugin-ec3.cfg section="INDIGO ORCHESTRATOR" option=INDIGO_ORCHESTRATOR_MAX_INSTANCES value={{ec3_max_instances}}
      notify: restart cluesd
    - ini_file: dest=/etc/clues2/conf.d/plugin-ec3.cfg section="INDIGO ORCHESTRATOR" option=INDIGO_ORCHESTRATOR_URL value={{orchestrator_url}}
      notify: restart cluesd

    - ini_file: dest=/etc/clues2/clues2.cfg section=general option=LRMS_CLASS value=cluesplugins.pbs
      notify: restart cluesd
      
      # CLUES PBS configuration
    - set_fact: TORQUE_PATH="/var/spool/torque"
      when: ansible_os_family == "Debian"
    - set_fact: TORQUE_PATH="/var/lib/torque"
      when: ansible_os_family == "RedHat"
    - ini_file: dest=/etc/clues2/clues2.cfg section=general option=LRMS_CLASS value=cluesplugins.pbs
      notify: restart cluesd
      when: clues_queue_system == 'torque'
    - copy: src=/etc/clues2/conf.d/plugin-pbs.cfg-example dest=/etc/clues2/conf.d/plugin-pbs.cfg force=no
      notify: restart cluesd
      when: clues_queue_system == 'torque'
    - ini_file: dest=/etc/clues2/conf.d/plugin-pbs.cfg section=PBS option=PBS_SERVER value=torqueserver
      notify: restart cluesd
      when: clues_queue_system == 'torque'
    - lineinfile: dest={{TORQUE_PATH}}/torque.cfg regexp=^SUBMITFILTER line='SUBMITFILTER /usr/local/bin/clues-pbs-wrapper' create=yes mode=644
      when: clues_queue_system == 'torque'
    - copy:
        content: |
           {% for number in range(1, ec3_max_instances|int + 1) %}
           {{VNODE}}{{number}}
           {% endfor %}
        dest: "{{TORQUE_PATH}}/server_priv/nodes"
      when: clues_queue_system == 'torque'
      
    - service: name=torque-server state=stopped pattern=/usr/sbin/pbs_server
      when: ansible_os_family == "Debian" and clues_queue_system == 'torque'
    - service: name=torque-server state=started pattern=/usr/sbin/pbs_server
      when: ansible_os_family == "Debian" and clues_queue_system == 'torque'
      
    - service: name=pbs_server state=stopped pattern=/usr/sbin/pbs_server
      when: ansible_os_family == "RedHat" and clues_queue_system == 'torque'
    - service: name=pbs_server state=started pattern=/usr/sbin/pbs_server
      when: ansible_os_family == "RedHat" and clues_queue_system == 'torque'
      
    # Many times pbs_server does not start properly. Wait and test it again
    - command: sleep 5
      when: clues_queue_system == 'torque'

    - service: name=pbs_server state=started pattern=/usr/sbin/pbs_sched
      when: ansible_os_family == "RedHat"
    - service: name=torque-server state=started pattern=/usr/sbin/pbs_server
      when: ansible_os_family == "Debian"

      # CLUES SGE configuration
    - ini_file: dest=/etc/clues2/clues2.cfg section=general option=LRMS_CLASS value=cluesplugins.sge
      notify: restart cluesd
      when: clues_queue_system == 'sge'
    - copy: src=/etc/clues2/conf.d/plugin-sge.cfg-example dest=/etc/clues2/conf.d/plugin-sge.cfg force=no
      notify: restart cluesd
      when: clues_queue_system == 'sge'
    - copy: src=/etc/clues2/conf.d/wrapper-sge.cfg-example dest=/etc/clues2/conf.d/wrapper-sge.cfg force=no
      notify: restart cluesd
      when: clues_queue_system == 'sge'
    - lineinfile: dest={{SGE_ROOT}}/default/common/sge_request regexp='^-jsv' line="-jsv /usr/local/bin/clues-sge-wrapper" create=yes mode=644
      when: clues_queue_system == 'sge'
    - lineinfile: dest=/etc/profile.d/sge_vars.sh regexp='SGE_JSV_TIMEOUT' line="export SGE_JSV_TIMEOUT=600" create=yes mode=755
      when: clues_queue_system == 'sge'

      # CLUES SLURM configuration
    - ini_file: dest=/etc/clues2/clues2.cfg section=general option=LRMS_CLASS value=cluesplugins.slurm
      notify: restart cluesd
      when: clues_queue_system == 'slurm'
    - copy: src=/etc/clues2/conf.d/plugin-slurm.cfg-example dest=/etc/clues2/conf.d/plugin-slurm.cfg force=no
      notify: restart cluesd
      when: clues_queue_system == 'slurm'
    - ini_file: dest=/etc/clues2/conf.d/plugin-slurm.cfg section=SLURM option=SLURM_SERVER value=slurmserverpublic
      notify: restart cluesd
      when: clues_queue_system == 'slurm'
    - command: mv /usr/local/bin/sbatch /usr/local/bin/sbatch.o creates=/usr/local/bin/sbatch.o
      when: clues_queue_system == 'slurm'                                                                         
    - command: mv /usr/local/bin/clues-slurm-wrapper /usr/local/bin/sbatch creates=/usr/local/bin/sbatch
      when: clues_queue_system == 'slurm'

      # TODO: Add Mesos and HTCondor recipes
